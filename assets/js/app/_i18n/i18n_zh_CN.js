const i18n_zh_CN = {
    "Error.Passport.Password.Wrong": "哇，密码不对！",
    "Error.Passport.Password.NotSet": "哦，不，你还没有设置密码！",
    "Error.Passport.Username.NotFound": "嗯，你叫什么名字？",
    "Error.Passport.Email.NotFound": "那封邮件好像不对",
    "Welcome to the jungle!": "欢迎来到Konga！",
    "Go ahead and create an administrator account.": "请先创建管理员帐户。",
    "Username": "用户名",
    "Email": "邮箱",
    "Password": "密码",
    "Confirm password": "确认密码",
    "Create Admin": "创建管理员",
    "Strip the request_path value before proxying the request to the final API. For example a request made to <code>/someservice/hello</code> will be resolved to <code>upstream_url/hello</code>. By default is false.": "请求路径目录在代理的最终请求API之前. 譬如需要请求 <code>/someservice/hello</code> 将被解析成 <code>upstream_url/hello</code>. 默认是否.",
    "API Gateway": "网关配置",
    "Save": "保存",
    "New user created successfully": "新用户创建成功",
    "Hosts": "主机名",
    "new connection": "新增连接",
    "Connection deleted successfully": "连接删除成功",
    "LUA Version": "LUA版本",
    "Profile": "基本信息",
    "Generic details about the node": "有关节点的常规详细信息",
    "Manage API healthchecks": "管理API接口的健康检查点",
    "Edit Upstream": "编辑上游",
    "Notifications": "通知",
    "Something went wrong...": "出现一些错误...",
    "Is this user an administrator?": "用户账号是否管理员",
    "DATASTORE INFO": "存储信息",
    "Username or Email": "用户名或邮箱",
    "The public path that points to your API. For example, <code>/someservice</code>. At least <code>request_host</code> or <code>request_path</code> or both should be specified.": "如果路径地址指向你的API地址. 譬如, <code>/someservice</code>. 至少 <code>请求域名</code> 或者 <code>请求路径</code> 或者两者都指向.",
    "Create connections to Kong Nodes and activate the one you want use.": "创建配置Kong节点信息.",
    "save settings": "保存设置",
    "semi-optional": "半选项",
    "edit API": "编辑API",
    "Settings updated!": "系统设置更新成功!",
    "Keyspace": "键空间",
    "no data found...": "无相关数据...",
    "Take snapshots of currently active nodes.": "获取当前活动节点的快照.",
    "Upstream URL": "上行流URL",
    "Password is required.": "请填入密码",
    "Cancel": "取消",
    "User permissions": "用户权限",
    "manage": "管理",
    "Snapshots": "镜像管理",
    "edit": "修改",
    "Admin listen": "管理监听",
    "No data found...": "无相关数据...",
    "User \"{0}\" updated successfully": "用户 \"{0}\" 更新成功",
    "Info": "信息管理",
    "ACCEPTED": "已接受",
    "Accepted": "已接受",
    "Send activation email.": "发送激活邮件",
    "The API name. If none is specified, will default to the <code>request_host</code> or <code>request_path</code>.": "API名称. 如果没有特殊, 默认为 <code>请求域名</code> 或者 <code>请求路径</code>.",
    "Database": "数据库",
    "Route health checks updated!": "路由健康检查更新!",
    "Edit": "编辑",
    "Snapshot Details": "镜像明细",
    "snapshot details": "镜像明细",
    "The username is required.": "用户名必填",
    "The email is required.": "邮箱必填",
    "Sign up!": "注册!",
    "Service details": "服务详情",
    "Server Name Indications": "指引域名站点",
    "Sign up restrictions": "注册限制",
    "The Route entities defines rules to match client requests. Each Route is associated with a Service, and a Service may have multiple Routes associated to it. Every request matching a given Route will be proxied to its associated Service.": "路由实体定义与客户端请求匹配的规则。每个路由都与一个服务相关联，并且一个服务可能有多个与之关联的路由。与给定路由匹配的每个请求都将被代理到其关联的服务。",
    "Users": "用户管理",
    "Creating": "创建中",
    "Don't have an account?": "是否没有账号?",
    "Api created!": "Api创建成功!",
    "DEFAULT": "默认",
    "This service is neither Access Controlled or secured with an Authentication plugin.": "此服务既不受访问控制，也不受身份验证插件的保护。",
    "Submit changes": "确认更改",
    "signup": "注册",
    "create connection": "创建连接",
    "First Name": "名字",
    "User \"{0}\" deleted successfully": "用户 \"{0}\" 删除成功",
    "Health Checks": "安全检查",
    "enabled": "开启",
    "disabled": "关闭",
    "A comma separated list of Server Name Indications. ex: ": "服务器名称指示的逗号分隔列表.例如:",
    "Eligible Consumers": "授权消费者",
    "Delete": "删除",
    "Strip Request Path": "请求路径目录",
    "Snapshot deleted successfully": "镜像删除成功",
    ">The$": ">请",
    "Activate one from the <a ui-sref=\"connections\">Connections</a> page.": "立即设置 <a ui-sref=\"connections\">连接管理</a> 页面.",
    "Password confirmation is required": "请再输入密码确认",
    "Loading consumers...": "加载中...",
    "Manage API Plugins": "管理API插件",
    "The base target URL that points to your API server, this URL will be used for proxying requests. For example, <code>https://mockbin.com</code>.": "基础的目的地URL指向你的API服务器, URL将采用代理请求转发. 譬如, <code>https://mockbin.com</code>.",
    "CLUSTER ({0} nodes)": "集群有 ({0} 节点数)",
    "Create Service": "创建服务",
    "Settings": "设置",
    "Scheduled job": "定时任务",
    "started":"开启",
    "stopped":"停止",
    "Add global plugins": "添加全局插件",
    "Add Global Plugins": "添加全局插件",
    "Connected to": "已连接至",
    "API health checks updated!": "API安全监查更新!",
    "Snapshot Created!": "镜像创建成功!",
    "Routes": "路由管理",
    "Consumers": "消费者管理",
    "API Plugins": "API插件",
    "Failed to connect to": "无法连接",
    "Services": "服务管理",
    "Create upstream": "创建上游",
    "If enabled, users will be allowed to sign up.": "如果启用，将允许用户注册。",
    "A comma-separated list of HTTP methods that point to your API. For example: <code>GET</code>,<code>POST</code>. At least one of <code>hosts</code>, <code>uris</code>, or <code>methods</code> should be specified.": "指向API的HTTP方法的逗号分隔列表。例如：<code>GET</code>，<code>POST</code>。应至少指定<code>主机</code>、<code>uri</code>或<code>方法</code>中的一个。",
    "Login": "登录",
    "New upstream created successfully": "新上行流量创建成功",
    "ADD PLUGIN": "添加插件",
    "Add Plugin": "添加插件",
    "add plugin": "添加插件",
    "Preserves the original <code>Host</code> header sent by the client, instead of replacing it with the <code>hostname</code> of the <code>upstream_url</code>. By default is false.": "保留原 <code>Host</code> 主机头发送到客户端, 替换为 <code>hostname</code> 主机名 <code>upstream_url</code>. 默认是否.",
    "ACTIVE": "可用的",
    "Active": "可用的",
    "Select a connection type.": "选择一种连接方式.",
    "Version": "版本号",
    "WRITING": "写入中",
    "Writing": "写入中",
    "Active node version updated": "活动节点版本更新",
    "Certificate": "证书",
    "The public DNS address that points to your API. For example, <code>mockbin.com</code>. At least <code>request_host</code> or <code>request_path</code> or both should be specified.": "如果DNS地址指向你的API地址. 譬如, <code>mockbin.com</code>. 至少 <code>请求域名</code> 或者 <code>请求路径</code> 或者两者都指向.",
    "API Healthchecks reset successfully!": "安全监测重置成功!",
    "Port": "端口",
    "UsersInfo": "用户信息",
    "Host": "主机",
    "Submit Certificates": "确认证书",
    "Target {0} is set to ": "目标 {0} 设置 ",
    "healthy":"健康",
    "unhealthy":"不健康",
    "Add New Service": "新增服务",
    "Certificates": "证书管理",
    "Failed to update settings!": "系统设置更新失败!",
    "WAITING": "等待中",
    "Waiting": "等待中",
    "Tag Line": "基 线",
    "plugin updated successfully!": "插件更新成功!",
    "Connections": "连接管理",
    "HostName": "主机名",
    "You have logged in successfully!": "登录成功!",
    "Key": "秘钥",
    "Checking Connection": "检查连接中",
    "Route created!": "路由创建成功!",
    "Preserve Host": ">保留域名",
    "Allow users to sign up.": "允许用户注册",
    "Make sure your active <a ui-sref=\"connections\">connection</a> is valid and Kong is up and running.": "请确认 <a ui-sref=\"connections\">连接管理</a> 设置有可用的Kong并且是运行中.",
    "You have logged out.": "安全退出!",
    "JWT AUTH": "JWT授权",
    "JWT deleted successfully": "JWT授权删除成功",
    "Contact points": "通讯节点",
    "Hello,": "你好,",
    "Upload the certificate .key file": "上传证书.key文件",
    "CONNECTIONS": "连接端",
    "HANDLED": "已处理",
    "Handled": "已处理",
    "There are no notifications at this point...": "没有相关的消息...",
    "Welcome!": "欢迎!",
    "Route updated successfully!": "路由更新成功!",
    "Logout": "安全退出",
    "Consumer updated successfully!": "消费者更新成功!",
    "Toggle navigation": "导航",
    "Choose connection": "选择连接",
    "Cluster": "集群",
    "submit changes": "确认修改",
    "Submit Changes": "确认修改",
    "Submit Upstream": "提交Upstream",
    "NODE INFO": "节点信息",
    "Name": "名称",
    "Active connection": "是否在线",
    "No active connection to Kong Admin was found.": "没有可用的Kong管理连接.",
    "The interval in milliseconds at which the Dashboard data will refresh. If set to 0, polling will be disabled.": "首页统计刷新的间隔（毫秒）。如果设置为0，将禁用轮询。",
    "Application": "应用设置",
    "Dashboard refresh interval": "首页统计更新周期",
    "will be saved and available for later import.": "将被保存并可供以后导入。",
    "A certificate object represents a public certificate/private key pair for an SSL certificate. These objects are used by Kong to handle SSL/TLS termination for encrypted requests. Certificates are optionally associated with SNI objects to tie a cert/key pair to one or more hostnames.": "证书对象表示SSL证书的公共证书/私钥对。Kong使用这些对象来处理加密请求的SSL/TLS终止。证书可以选择与SNI对象关联，以将证书/密钥对绑定到一个或多个主机名。",
    "delete": "删除",
    "API updated successfully!": "API更新成功!",
    "Create User": "创建用户",
    "PLUGINS": "插件",
    "New group created successfully": "新分组创建成功",
    "Manage Konga users and user roles": "管理Konga用户及用户角色",
    "General settings": "常规配置",
    "OAuth2 deleted successfully": "OAuth2授权删除成功",
    "A comma-separated list of URIs prefixes that point to your API. For example: <code>/my-path</code>. At least one of <code>hosts</code>, <code>uris</code>, or <code>methods</code> should be specified.": "指向API的uri前缀的逗号分隔列表。例如：<code>/my path</code>。应至少指定<code>主机</code>、<code>uri</code>或<code>方法</code>中的一个。",
    "Add Certificates to": "添加证书至",
    "Request Host": ">请求域名",
    "TIMERS": "时序",
    "Node Info": "节点信息管理",
    "Credentials where assigned successfully!": "凭据成功分配!",
    "Transport updated!": "转换更新成功!",
    "Consumer created successfully!": "消费者创建成功!",
    "Password Confirmation": "密码确认",
    "Password and password confirmation don't match.": "两次输入的密码不一致.",
    "List of consumers with access, based on ACLs & Auth plugins": "基于acl和Auth插件的具有访问权限的使用者列表",
    "Username or Email is required.": "请填入用户名或邮箱",
    "Credentials deleted successfully": "凭据删除成功",
    "The email is invalid.": "邮箱无效.",
    "Total Requests": "总请求",
    "Edit API": "编辑API",
    "The Consumer object represents a consumer - or a user - of an API. You can either rely on Kong as the primary datastore, or you can map the consumer list with your database to keep consistency between Kong and your existing primary datastore.": "Consumer对象表示API的使用者或用户。您可以将Kong作为主数据存储，也可以将使用者列表与数据库映射，以保持Kong与现有主数据存储之间的一致性。",
    "Upstream updated successfully": "上行流更新成功",
    "User": "用户",
    "optional": "选项",
    "HealthCheck deleted successfully": "安全检查删除成功",
    "New node created successfully": "新节点创建成功",
    "First of all, lets setup a connection to Kong Admin.": "首先,设置一个Kong的管理端",
    "Target added successfully!": "目标添加成功!",
    "Service created!": "服务创建成功!')",
    "The API object describes an API that's being exposed by Kong. Kong needs to know how to retrieve the API when a consumer is calling it from the Proxy port. Each API object must specify a request host, a request path or both. Kong will proxy all requests to the API to the specified upstream URL.": "API对象描述了Kong正在公开的API。当消费者从代理端口调用API时，Kong需要知道如何检索它。每个API对象必须指定请求主机、请求路径或两者。Kong将把对API的所有请求代理到指定的上游URL。",
    "Configure": "配置",
    "Upstreams": "上游管理",
    "Node updated successfully": "节点更新成功",
    "A Plugin entity represents a plugin configuration that will be executed during the HTTP request/response workflow, and it's how you can add functionalities to APIs that run behind Kong, like Authentication or Rate Limiting for example.": "插件实体表示将在HTTP请求/响应工作流期间执行的插件配置，以及如何向在Kong之后运行的api添加功能，例如身份验证或速率限制。",
    "The upstream object represents a virtual hostname and can be used to loadbalance incoming requests over multiple services (targets). So for example an upstream named <code>service.v1.xyz</code> with an API object created with an <code>upstream_url=https://service.v1.xyz/some/path</code>. Requests for this API would be proxied to the targets defined within the upstream.": "upstream对象表示虚拟主机名，可用于在多个服务（目标）上加载平衡传入请求。例如，一个名为的上游，其API对象是用一个创建的。对这个API的请求将被代理到上游中定义的目标。",
    "Plugins": "插件管理",
    "Key deleted successfully": "关键字授权删除成功",
    "Service updated successfully!": "服务更新成功!",
    "Submit Service": "确认服务",
    "Create consumer": "创建消费者",
    "add route": "添加路由",
    "Last Name": "姓氏",
    "Plugin added successfully!": "插件添加成功!",
    "Assigned plugins": "已分配插件",
    "Data Centers": "数据中心",
    "KEY AUTH": "键值授权",
    "Request Path": ">请求路径",
    "Dashboard": "仪表概览",
    "Sign in to continue": "登录后继续",
    "DATABASE": "数据库",
    "Add Certificate": "添加证书",
    "READING": "读取中",
    "Reading": "读取中",
    "Service entities, as the name implies, are abstractions of each of your own upstream services. Examples of Services would be a data transformation microservice, a billing API, etc.": "服务实体，顾名思义，是每个上游服务的抽象。服务的例子包括数据转换微服务、计费API等。",
    "Settings updated successfully!": "系统设置更新成功!",
    "Sign in": "登 录",
    "Upload the certificate file": "上传证书",
    "Is this user active?": "用户账号是否可用",
    "A comma-separated list of domain names that point to your API. For example: <code>example.com</code>. At least one of <code>hosts</code>, <code>uris</code>, or <code>methods</code> should be specified.": "指向您的API的域名的逗号分隔列表。例如：<code>example.com</code>。应至少指定<code>主机</code>、<code>uri</code>或<code>方法</code>中的一个。.",
    "Route plugins": "路由插件",
    "Route Plugins": "路由插件",
    "Route": "路由",
    "Manage Route Plugins": "路由插件管理",
    "You can only create routes from a service page": "创建路由请到服务管理页面",
    "Service Plugins": "服务插件",
    "Service plugins": "服务插件",
    "Manage Service Plugins": "管理服务插件",
    "User profile": "用户基本信息",
    "Show Service": "显示服务",
    "Edit Consumer": "编辑消费者",
    "edit consumer": "编辑消费者",
    "add": "添加",
    "create": "创建",
    "DBMS": "数据库系统",
    "Running": "运行中",
    "Pending": "待定中",
    "Integrate Konga with 3rd party applications.": "将Konga与第三方应用程序集成。",
    "3RD-PARTY INTEGRATIONS": "第三方集成"
};

